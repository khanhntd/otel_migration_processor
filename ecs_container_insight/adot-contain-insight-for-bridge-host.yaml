AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ClusterName:
    Type: String
    Description: Enter the name of your ECS cluster from which you want to collect metrics
    Default: 'ecs-ec2-nginx'
  CreateIAMRoles:
    Type: String
    Default: 'False'
    AllowedValues:
      - 'True'
      - 'False'
    Description: Whether to create default IAM roles
    ConstraintDescription: must specify True or False.
  TaskRoleArn:
    Type: String
    Default: 'arn:aws:iam::167129616597:role/CWAgentECSTaskRole'
    Description: Enter the role arn you want to use as the ecs task role
  ExecutionRoleArn:
    Type: String
    Default: 'arn:aws:iam::167129616597:role/CWAgentECSExecutionRole'
    Description: Enter the role arn you want to use as the ecs execution role
Conditions:
  CreateRoles: !Equals
    - !Ref CreateIAMRoles
    - 'True'
  DefaultTaskRole: !Equals
    - !Ref TaskRoleArn
    - Default
  DefaultExecutionRole: !Equals
    - !Ref ExecutionRoleArn
    - Default
Resources:
  ECSTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: ecs-otel-daemon-service
      TaskRoleArn: !If
        - CreateRoles
        - !GetAtt
          - ECSTaskRole
          - Arn
        - !If
          - DefaultTaskRole
          - !Sub 'arn:aws:iam::${AWS::AccountId}:role/OtelECSTaskRole'
          - !Ref TaskRoleArn
      ExecutionRoleArn: !If
        - CreateRoles
        - !GetAtt
          - ECSExecutionRole
          - Arn
        - !If
          - DefaultExecutionRole
          - !Sub 'arn:aws:iam::${AWS::AccountId}:role/OtelECSExecutionRole'
          - !Ref ExecutionRoleArn
      NetworkMode: bridge
      ContainerDefinitions:
        - Name: aws-collector
          Image: 'public.ecr.aws/aws-observability/aws-otel-collector:v0.20.0'
          MountPoints:
            - ReadOnly: true
              ContainerPath: /rootfs/proc
              SourceVolume: proc
            - ReadOnly: true
              ContainerPath: /rootfs/dev
              SourceVolume: dev
            - ReadOnly: true
              ContainerPath: /sys/fs/cgroup
              SourceVolume: al2_cgroup
            - ReadOnly: true
              ContainerPath: /cgroup
              SourceVolume: al1_cgroup
            - ReadOnly: true
              ContainerPath: /rootfs/sys/fs/cgroup
              SourceVolume: al2_cgroup
            - ReadOnly: true
              ContainerPath: /rootfs/cgroup
              SourceVolume: al1_cgroup
          Secrets:
            - Name: AOT_CONFIG_CONTENT
              ValueFrom: !Sub 'AmazonCloudWatch-AOC-ECS-Prometheus-${ClusterName}'

          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: 'True'
              awslogs-group: /ecs/ecs-cwagent-daemon-service
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: ecs
      RequiresCompatibilities:
        - EC2
      Volumes:
        - Name: proc
          Host:
            SourcePath: /proc
        - Name: dev
          Host:
            SourcePath: /dev
        - Name: al1_cgroup
          Host:
            SourcePath: /cgroup
        - Name: al2_cgroup
          Host:
            SourcePath: /sys/fs/cgroup
      Cpu: '128'
      Memory: '64'
  ECSDaemonService:
    Type: 'AWS::ECS::Service'
    Properties:
      TaskDefinition: !Ref ECSTaskDefinition
      Cluster: !Ref ClusterName
      LaunchType: EC2
      SchedulingStrategy: DAEMON
      ServiceName: otel-daemon-service
  ECSTaskRole:
    Type: 'AWS::IAM::Role'
    Condition: CreateRoles
    Properties:
      Description: Allows ECS tasks to call AWS services on your behalf.
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy'
      RoleName: OtelECSTaskRole
  ECSExecutionRole:
    Type: 'AWS::IAM::Role'
    Condition: CreateRoles
    Properties:
      Description: >-
        Allows ECS container agent makes calls to the Amazon ECS API on your
        behalf.
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy'
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'
      RoleName: OtelECSExecutionRole

  AocConfigSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub 'AmazonCloudWatch-AOC-ECS-Prometheus-${ClusterName}'
      Type: String
      Tier: Intelligent-Tiering
      Description: !Sub 'CWAgent SSM Parameter with App Mesh and Java EMF Definition for ECS Cluster: ${ClusterName}'
      Value: !Sub |-
        receivers:
          awscontainerinsightreceiver:
            collection_interval: 60s
            container_orchestrator: ecs
        
        processors:
          batch/metrics:
            timeout: 60s
        
        exporters:
          awsemf:
            namespace: ContainerInsightsEC2Instance
            log_group_name: '/aws/ecs/containerinsights/{ClusterName}/performance'
            log_stream_name: 'instanceTelemetry/{ContainerInstanceId}'
            resource_to_telemetry_conversion:
              enabled: true
            dimension_rollup_option: NoDimensionRollup
            parse_json_encoded_attr_values: [Sources]
            metric_declarations:
              # instance metrics
              - dimensions: [ [ ContainerInstanceId, InstanceId, ClusterName] ]
                metric_name_selectors:
                  - instance_cpu_reserved_capacity
                  - instance_cpu_utilization
                  - instance_filesystem_utilization
                  - instance_memory_reserved_capacity
                  - instance_memory_utilization
                  - instance_network_total_bytes
                  - instance_number_of_running_tasks
              - dimensions: [ [ClusterName] ]
                metric_name_selectors:
                  - instance_cpu_limit
                  - instance_cpu_reserved_capacity
                  - instance_cpu_usage_total
                  - instance_cpu_utilization
                  - instance_filesystem_utilization
                  - instance_memory_limit
                  - instance_memory_reserved_capacity
                  - instance_memory_utilization
                  - instance_memory_working_set
                  - instance_network_total_bytes
                  - instance_number_of_running_tasks
          logging:
            loglevel: debug
        
        service:
          pipelines:
            metrics:
              receivers: [ awscontainerinsightreceiver]
              processors: [ batch/metrics ]
              exporters: [ awsemf, logging ]
